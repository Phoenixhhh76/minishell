NAME = minishell

CC = cc
CFLAGS = -Wall -Wextra -Werror -g3
INCLUDES = -Iincludes
LIBS = -lreadline
RM = rm -f

# Libft
LIBFT_DIR = libft
LIBFT = $(LIBFT_DIR)/libft.a

# Folders
SRC_DIR = src
OBJ_DIR = obj
BUILT_DIR = builtins
PARSING_DIR = parsing
EXEC_DIR = exec
TOKENIZING_DIR = tokenizing

# Source files
BUILTINS    := 
PARSING     :=
EXEC        := $(EXEC_DIR)/exec_builtins.c $(EXEC_DIR)/exec_ast.c
TOKENIZING  := $(TOKENIZING_DIR)/token.c
COMMON      := $(SRC_DIR)/main.c $(SRC_DIR)/signal.c $(SRC_DIR)/init_ast.c

SRCS        := $(BUILTINS) $(PARSING) $(EXEC) $(TOKENIZING) $(COMMON)

# Object files (mirror structure)
OBJS = $(SRCS:.c=.o)
OBJS_DIR = $(addprefix $(OBJ_DIR)/, $(notdir $(OBJS)))

# Default target
all: $(NAME)

$(NAME): $(LIBFT) $(OBJS_DIR)
	$(CC) $(CFLAGS) $(INCLUDES) $(OBJS_DIR) $(LIBFT) $(LIBS) -o $(NAME)

# Compile .o from .c, store all .o in obj/
# this line make us can find a file with the name in all the folder
$(OBJ_DIR)/%.o: %.c
	@mkdir -p $(OBJ_DIR)
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Libft
$(LIBFT):
	@$(MAKE) -C $(LIBFT_DIR)

clean:
	$(RM) $(OBJS_DIR)
	@$(MAKE) -C $(LIBFT_DIR) clean

fclean: clean
	$(RM) $(NAME)
	@$(MAKE) -C $(LIBFT_DIR) fclean

re: fclean all

.PHONY: all clean fclean re
